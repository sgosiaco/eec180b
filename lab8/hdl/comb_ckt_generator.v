//============================================================================
// comb_ckt_generator.v
//
// This code is generated by Terasic System Builder
// and modified by M. Hildebrand and B. Baas
//
// 2018/02/05 First version
// 2018/04/24 Routed all board-level switches and LEDs to and from this module
//============================================================================

module comb_ckt_generator (
   clk,
   // VGA-related signals
   col,
   row,
   red,
   green,
   blue,
   // input push buttons and switches
   KEY,
   SW,
   // output LEDs and 7-segment displays
   LEDR,
   HEX0,
   HEX1,
   HEX2,
   HEX3,
   HEX4,
   HEX5
   );
input clk;
input  [9:0]  col;
input  [8:0]  row;
output [3:0]  red;    // 4-bit color output
output [3:0]  green;  // 4-bit color output
output [3:0]  blue;   // 4-bit color output

// input push buttons and switches
input  [1:0]  KEY;    // two board-level push buttons KEY1 - KEY0
input  [9:0]  SW;     // ten board-level switches SW9 - SW0

// output LEDs and 7-segment displays
output [9:0]  LEDR;   // ten board-level LEDs LEDR9 - LEDR0
output [7:0]  HEX0;   // board-level 7-segment display
output [7:0]  HEX1;   // board-level 7-segment display
output [7:0]  HEX2;   // board-level 7-segment display
output [7:0]  HEX3;   // board-level 7-segment display
output [7:0]  HEX4;   // board-level 7-segment display
output [7:0]  HEX5;   // board-level 7-segment display


//============================================================================
//  reg/wire declarations
//============================================================================ 
wire [9:0] new_col;
wire [8:0] new_row;
wire [11:0] rd_data;
wire [13:0] address;

assign LEDR = {10{1'b0}};
assign HEX0 = 8'hff;
assign HEX1 = 8'hff;
assign HEX2 = 8'hff;
assign HEX3 = 8'hff;
assign HEX4 = 8'hff;
assign HEX5 = 8'hff;

wire [3:0] r, g, b;
wire out_of_range;
//============================================================================
// Board-LED related circuits
//============================================================================

conv_coord conv_coord(
    .zoom(SW[9:8]),
    .col(col),
    .row(row),
    .new_col(new_col),
    .new_row(new_row),
    .out_of_range(out_of_range)
);

det_pixel det_pixel(
	 .clk(clk),
    .zoom(SW[9:8]),
    .col(new_col),
    .row(new_row),
    .out_of_range(out_of_range),
    .special(SW[0]),
    .mem_color(rd_data),
    .red(r),
    .green(g),
    .blue(b),
    .address(address)
);

mem_control mem_control(
    .clk(clk),
    .rd_addr(address),
    .rd_data(rd_data)
);

assign red = SW[7] ? 4'h0 : r;
assign green = SW[6] ? 4'h0 : g;
assign blue = SW[5] ? 4'h0 : b;

endmodule
